export class Orbs{ctx;params;quizParams;constructor(t,e){this.ctx=t.getContext("2d"),this.quizParams=e,this.params=this.quizParams.canvasParams,t.height=this.params.height,t.width=this.params.width,this.ctx.fillStyle=this.params.bg,this.ctx.fillRect(0,0,this.params.width,this.params.height)}drawHeader(t){this.ctx.textAlign="left",this.ctx.fillStyle=this.params.fg,this.ctx.font=this.params.titleFont,this.ctx.fillText(t.title,20,100,this.params.width-160),this.ctx.textAlign="right",this.ctx.font=this.params.bodyFont;const e=this.params.width-20;this.ctx.fillText(t.url,e,40),this.ctx.fillText(t.version,e,70),this.ctx.fillText(t.edition,e,100)}drawCircle(t,e,s,r=this.params.fg){this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(t,e,s,0,2*Math.PI),this.ctx.fill()}checkValue(t){return Number.isInteger(t)&&t>-1&&t<7}loadImage(t){const e=new Image;return e.src="./assets/icons/"+t,new Promise(((t,s)=>{e.addEventListener("load",(()=>t(e))),e.addEventListener("abort",s)}))}drawImage(t,e,s){this.ctx.drawImage(t,e-40,s-40,80,80)}getImage(t,e){return this.checkValue(e)?this.quizParams.images[t][e]:null}getRangeSteps(t){return Array(7).fill(0).map(((e,s)=>125+t/6*s))}fillAxis(t,e,s){const r=250+175*this.quizParams.axes.indexOf(t),i=this.params.width-250;this.ctx.fillStyle=this.params.fg,this.ctx.fillRect(125,r,i,4);const a=this.getRangeSteps(i);for(const[e,s]of a.entries()){this.drawCircle(s,r,12);const i=this.quizParams.colors[t][e];this.drawCircle(s,r,8,i)}if(s){const i=a[e],n=this.quizParams.colors[t][e],o=this.quizParams.labels[t][e];this.ctx.textAlign="center",this.ctx.font=this.params.bodyFont,this.ctx.fillStyle=this.params.fg,this.ctx.fillText(o,i,r-70,225),this.drawCircle(i,r,60),this.drawCircle(i,r,52,n),this.drawImage(s,i,r)}}async drawAxis(t,e){const s=this.getImage(t,e),r=s?await this.loadImage(s):null;this.fillAxis(t,e,r)}drawAll(t,e){this.drawHeader(t);const s=[];for(const[t,r]of Object.entries(e)){if(!this.checkValue(r))throw new Error(`Invalid score: ${t}: ${r}`);s.push(this.drawAxis(t,r))}return Promise.all(s)}static downloadCanvas(t){const e=document.createElement("a"),s=(new Date).toISOString();e.download=`${document.title}-${s}.png`,e.href=t.toDataURL("image/png"),e.click()}}export function cleanUrl(t,e=null){let s=t.search?t.href.split(t.search)[0]:t.href;s=s.replace(/^https?\:\/\//gim,""),s=s.replace(/\/$/gim,"");const r=new RegExp(`/${e}(.htm[l]?)?$`,"gmi");return s.match(r)&&(s=s.replace(r,"")),s}function t(t){return new Uint8Array([...atob(t)].map((t=>t.charCodeAt(0))))}export async function loadJson(t){const e=sessionStorage.getItem(`cached-${t}`);if(e)return JSON.parse(e);const s=await fetch(`./dist/json/${t}.json`),r=s.headers.get("Content-Type");if(!r||!r.toLowerCase().startsWith("application/json"))throw new Error(`Invalid response Content-Type: ${r}`);if(s.status>299)throw new Error(`Recieved error response: ${s.status}; Text: ${s.text}`);const i=await s.text();return sessionStorage.setItem(`cached-${t}`,i),JSON.parse(i)}export function randomizeArray(t){const e=structuredClone(t);for(let t=e.length;t>1;t--){const r=(s=t,Math.floor(Math.random()*s));[e[t-1],e[r]]=[e[r],e[t-1]]}var s;return e}export const scoreParser={encode:function(t,e){const s=function(t){const e=t.length;if(e>255)throw new Error("Score array too large");const s=[e];for(let r=0;r<e;r+=2){const[e,i]=[t[r],t[r+1]??0];s.push(e<<4|i)}return new Uint8Array(s)}(t);return function(t){const e=new Uint8Array(t);return btoa(String.fromCharCode(...e))}(function(...t){const e=t.map((t=>t.byteLength)),s=e.reduce(((t,e)=>t+e),0),r=new Uint8Array(s);for(const[s,i]of t.entries()){const t=s>=1?e[s-1]:0;r.set(new Uint8Array(i),t)}return r}(s,(new TextEncoder).encode(e)))},decode:function(e){if(e.startsWith("eyJxdWl6I")){const s=(new TextDecoder).decode(t(e)),{quiz:r,scores:i}=JSON.parse(s);return[r,Object.values(i)]}return function(t){const e=new Uint8Array(t),s=e[0],r=Math.ceil(s/2)+1,i=new Uint8Array(e.slice(1,r)),a=[];for(const t of i){const[e,s]=[(240&t)>>4,15&t];a.push(e,s)}return a.length>s&&a.pop(),[(new TextDecoder).decode(e.slice(r)),a]}(t(e))}};