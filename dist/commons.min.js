export class Orbs{ctx;params;quizParams;constructor(t,i){this.ctx=t.getContext("2d"),this.quizParams=i,this.params=this.quizParams.canvasParams,t.height=this.params.height,t.width=this.params.width,this.ctx.fillStyle=this.params.bg,this.ctx.fillRect(0,0,this.params.width,this.params.height)}drawHeader(t){this.ctx.textAlign="left",this.ctx.fillStyle=this.params.fg,this.ctx.font=this.params.titleFont,this.ctx.fillText(t.title,20,100,this.params.width-160),this.ctx.textAlign="right",this.ctx.font=this.params.bodyFont;const i=this.params.width-20;this.ctx.fillText(t.url,i,40),this.ctx.fillText(t.version,i,70),this.ctx.fillText(t.edition,i,100)}drawCircle(t,i,e,s=this.params.fg){this.ctx.fillStyle=s,this.ctx.beginPath(),this.ctx.arc(t,i,e,0,2*Math.PI),this.ctx.fill()}checkValue(t){return Number.isInteger(t)&&t>-1&&t<7}loadImage(t){const i=new Image;return i.src="./assets/icons/"+t,new Promise(((t,e)=>{i.addEventListener("load",(()=>t(i))),i.addEventListener("abort",e)}))}drawImage(t,i,e){this.ctx.drawImage(t,i-40,e-40,80,80)}getImage(t,i){return this.checkValue(i)?this.quizParams.images[t][i]:null}getRangeSteps(t){return Array(7).fill(0).map(((i,e)=>125+t/6*e))}fillAxis(t,i,e){const s=250+175*this.quizParams.axes.indexOf(t),a=this.params.width-250;this.ctx.fillStyle=this.params.fg,this.ctx.fillRect(125,s,a,4);const r=this.getRangeSteps(a);for(const[i,e]of r.entries()){this.drawCircle(e,s,12);const a=this.quizParams.colors[t][i];this.drawCircle(e,s,8,a)}if(e){const a=r[i],h=this.quizParams.colors[t][i],c=this.quizParams.labels[t][i];this.ctx.textAlign="center",this.ctx.font=this.params.bodyFont,this.ctx.fillStyle=this.params.fg,this.ctx.fillText(c,a,s-70,225),this.drawCircle(a,s,60),this.drawCircle(a,s,52,h),this.drawImage(e,a,s)}}async drawAxis(t,i){const e=this.getImage(t,i),s=e?await this.loadImage(e):null;this.fillAxis(t,i,s)}drawAll(t,i){this.drawHeader(t);const e=[];for(const[t,s]of Object.entries(i)){if(!this.checkValue(s))throw new Error(`Invalid score: ${t}: ${s}`);e.push(this.drawAxis(t,s))}return Promise.all(e)}static downloadCanvas(t){const i=document.createElement("a"),e=(new Date).toISOString();i.download=`${document.title}-${e}.png`,i.href=t.toDataURL("image/png"),i.click()}}export function cleanUrl(t,i=null){let e=t.search?t.href.split(t.search)[0]:t.href;e=e.replace(/^https?\:\/\//gim,""),e=e.replace(/\/$/gim,"");const s=new RegExp(`/${i}(.htm[l]?)?$`,"gmi");return e.match(s)&&(e=e.replace(s,"")),e}export function b64enc(t){const i=(new TextEncoder).encode(t);return window.btoa(String.fromCharCode(...i))}export function b64dec(t){const i=window.atob(t),e=new Uint8Array([...i].map(((t,e)=>i.charCodeAt(e))));return new TextDecoder("utf-8").decode(e)}